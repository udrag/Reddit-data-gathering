# import relevant libraries
import pandas as pd
import requests
from datetime import datetime

# read the personal data and assign it to relevant variables
with open('PATH TO YOUR FILE', 'r') as f: # file that stores users Reddit account name
    username = f.read()
with open('PATH TO YOUR FILE', 'r') as f: # file that stores users Reddit account password
    password = f.read() 
with open('PATH TO YOUR FILE', 'r') as f: # file that stores users Reddit personal use script
    personal_use_script = f.read()
with open('PATH TO YOUR FILE', 'r') as f: # file that stores users Reddit secret
    secret = f.read()
    
# assign the authentification data
auth = requests.auth.HTTPBasicAuth(pus, secret)

# assing the log in details
data = {'grant_type': 'password',
        'username': username,
        'password': password
       }

# assign a brief description of the app for Reddit to request the token
headers = {'User-Agent': 'A COUPLE OF WORDS TO DESCRIBE YOUR APPLICATION'}

# intiate the request for an OAuth Token
## repeate this step to produce another token after two hours
request = requests.post('https://www.reddit.com/api/v1/access_token',
                        auth=auth, data=data, headers=headers)
                        
# store the response using json 
token = request.json()['access_token']

# due to Reddit security measures and namely that requests for multiple resources at a time are always 
#better than requests for single-resources in a loop, user needs to change the User-Agent string to 
#something unique and descriptive
headers = {**headers, **{'Authorization': f'Bearer {token}'}}

def reddit_data():
    # url as a string with the users input for the name of the Reddit subpost
    print('Please enter the name of the Reddit subpost.')
    subreddit = "https://oauth.reddit.com/r/" + str(input().lower())
    # users input on the limit of posts
    print('Please enter the total number of Reddit subpost.')
    limit = int(input())
    # initiate a request for data based on the users input
    response = requests.get(subreddit,
                   headers=headers, params={'limit':limit})
    # create an empty lists
    all_data = []
    # loop through posts and append the data to a list
    for post in response.json()['data']['children']:
        # append relevant data to list
        data = {'title': post['data']['title'],
                'ups': post['data']['ups'],
                'downs': post['data']['downs'],
                'upvote_ratio': post['data']['upvote_ratio'],
                'score': post['data']['score'],
                'selftext': post['data']['selftext'],
                'subreddit': post['data']['subreddit']
                }
        all_data.append(data)
    # convert the list to dataframe   
    return pd.DataFrame(all_data)   
